#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 7.6
#  in conjunction with Tcl version 8.6
#    Feb 28, 2023 11:07:08 AM IST  platform: Linux

import sys
import tkinter as tk

import proj

_debug = True # False to eliminate debug printing from callback functions.

def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol( 'WM_DELETE_WINDOW' , root.destroy)
    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root
    _w1 = proj.Toplevel1(_top1)
    # Creates a toplevel widget.
    global _top2, _w2
    _top2 = tk.Toplevel(root)
    # _w2 = proj.LoginPage(_top2)
    # Creates a toplevel widget.
    global _top4, _w4
    _top4 = tk.Toplevel(root)
    # _w4 = proj.MainPage(_top4)
    # Creates a toplevel widget.
    global _top5, _w5
    _top5 = tk.Toplevel(root)
    # _w5 = proj.QueryPage(_top5)
    # Creates a toplevel widget.
    global _top6, _w6
    _top6 = tk.Toplevel(root)
    # _w6 = proj.ManageSyngPage(_top6)
    # Creates a toplevel widget.
    global _top7, _w7
    _top7 = tk.Toplevel(root)
    # _w7 = proj.ViewSungPage(_top7)
    # Creates a toplevel widget.
    global _top8, _w8
    _top8 = tk.Toplevel(root)
    # _w8 = proj.ManageGabaiPage(_top8)
    root.mainloop()

def add_syng(*args):
    if _debug:
        print('proj_support.add_syng')
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()

def connect(*args):
    if _debug:
        print('proj_support.connect')
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()

def del_syng(*args):
    if _debug:
        print('proj_support.del_syng')
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()

def edit_syng(*args):
    if _debug:
        print('proj_support.edit_syng')
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()

def get_gabai(*args):
    if _debug:
        print('proj_support.get_gabai')
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()

def login_guest(*args):
    if _debug:
        print('proj_support.login_guest')
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()

def manage_gabai(*args):
    if _debug:
        print('proj_support.manage_gabai')
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()

def manage_syng(*args):
    if _debug:
        print('proj_support.manage_syng')
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()

def save_syng(*args):
    if _debug:
        print('proj_support.save_syng')
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()

def send_query(*args):
    if _debug:
        print('proj_support.send_query')
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()

if __name__ == '__main__':
    proj.start_up()




